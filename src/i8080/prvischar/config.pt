from    testmc  import *
from    testmc.i8080  import Machine
import  pytest

test_rig = '''
            cpu 8080
            include  src/i8080/std.i80
            include testmc/i8080/tmc/biosdef.i80
            include src/i8080/prvischar/config.i80

prvattr_none    db  $01,'>'
prvattr_A       db  $02,'$<'
prvattr_B       db  $03,'!!<'
'''

def sgr(n, s=''): return f'\x1B[{int(n)}m' + s

CHAR_OUTPUT = [
    (0x20, ' '),        (0x61, 'a'),        (0x7E, '~'),        # printable
    (0xA0, '!!< >'),    (0xDA, '!!<Z>'),    (0xFE, '!!<~>') ,   # ctrl
    (0x00, '$<@>'),     (0x1F, '$<_>'),     (0x7F, '$<?>'),     # hi-bit
    (0x80, '!!<$<@>'),  (0x9F, '!!<$<_>'),  (0xFF, '!!<$<?>'),  # ctrl + hi-bit
]
pytest.register_assert_rewrite('src.generic.functions')
from src.generic.functions import a_output_test
@pytest.mark.parametrize('char, output', CHAR_OUTPUT, ids=tmc_tid)
def test_config_prvischar(m, R, S, loadbios, char, output):
    a_output_test(S.prvischar, m, R, S, loadbios, char, output)
