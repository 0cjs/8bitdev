;   a2/def.a65 - Apple II definitions
;
;   These use the labels from the Apple II Autostart ROM listing in the
;   Apple II Reference Manual.
;

;---------------------------------------------------------------------
;   Macros and functions

;   AA: "Apple ASCII". Set high bit on char _c_ to print properly.
AA          function c,(c|$80)

;---------------------------------------------------------------------
;   Zero-page locations

MODE        equ     $31         ; monitor mode: 0 or converted `:+-.` char
YSAV        equ     $34         ; saved Y input pointer in monitor
YSAV1       equ     $35         ; temp for COUTZ (COUT1); otherwise unused
PROMPT      equ     $33         ; prompt char for GETLN
CSWL        equ     $36         ; vector for current char out routine

;   General storage for monitor routines
PCL         equ     $3A         ; saved program counter
PCH         equ     $3B
A1L         equ     $3C         ; temporary locations 
A1H         equ     $3D
A2L         equ     $3E
A2H         equ     $3F
A3L         equ     $40
A3H         equ     $41
A4L         equ     $42
A4H         equ     $43
A5L         equ     $44
A5H         equ     $45

;---------------------------------------------------------------------
;   Misc. locations

IN          equ     $200        ; input buffer, to $2FF
USRADR      equ     $3F8        ; monitor Ctrl-Y "user" command JMPs here

;---------------------------------------------------------------------
;   Monitor routines
;
;   All of the following work in both original and Autostart Monitors.
;   `♣` followed by registers indicates registers destroyed by call

;   output
COUT        equ     $FDED       ; print char in A using CSW
COUT1       equ     $FDF0       ; print char in A to screen; A preserved.
                                ; handles CR $8D, LF $8A, BEL $87
CROUT       equ     $FD8E       ; print CR using CSW
CROUT1      equ     $FD8B       ; clear from cursor to right edge of text
                                ;   window and call CROUT
PRBYTE      equ     $FDDA       ; print A register in hex; ♣A
PRHEX       equ     $FDE3       ; print lower nybble of A register in hex; ♣A
PRNTAX      equ     $F941       ; print A followed by X registers in hex: ♣A
PERR        equ     $FF2D       ; print "ERR" and BEL using CSW

PRA1        equ     $FD92       ; print CR (A1H) (A1L) '-'
PRYX2       equ     $FD96       ; print CR (PCH) (PCL) '-'

;   input
GETLNZ      equ     $FD67       ; issue CR and call GETLN
GETLN       equ     $FD6A       ; print PROMPT, read line, returns X=length
GETLN1      equ     $FD6F       ; GETLN without prompt (unless Ctrl-X'd)

;   misc
IOSAVE      equ     $FF4A       ; save A,X,P,Y,S in $45-$49. ♣A,X, CLD.
IOREST      equ     $FF3F       ; load A,X,P,Y,S from $45-49
