from    testmc  import *
from    testmc.symtab  import SymTab
import  pytest


@pytest.mark.parametrize(
    '  value,    m,    l', (
    ( 0x0000, 0x00, 0x00),
    ( 0xFEDC, 0xFE, 0xDC),
    (0x12340, 0x23, 0x40),
))
def test_LB_MB(value, l, m):
    assert (m, l) == (MB(value), LB(value))

@pytest.mark.parametrize('input, expected', [
    (   True,   True),
    (  False,   False),
    (     12,   '$0C'),
    (   1023,   '$3FF'),
    (   '0A',   "'0A'"),
])
def test_tmc_tid(input, expected):
    assert expected == tmc_tid(input)

def test_sym_tid():
    tab = SymTab.fromargs(
        BAD0=0, BAD5=5, good6=6, foo=0x100, BAR=0x200, Baz=0x200)

    tid = sym_tid(tab)
    assert (     0,  '$05', 'good6',     '$A001',      'foo',  'BAR,Baz', ) \
        == (tid(0), tid(5),  tid(6), tid(0xA001), tid(0x100), tid(0x200), )

    tid = sym_tid(tab, multi=False)
    assert (      'BAR',     '$123', ) \
        == ( tid(0x200), tid(0x123), )

def test_sym_tid_notnum():
    tid = sym_tid(SymTab.fromargs())
    assert "'hello'" == tid('hello')
    assert tid(object())
