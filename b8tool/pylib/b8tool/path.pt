from    b8tool.path  import *
from    os.path  import abspath
import  pytest

def test_relproj():
    assert Path('foo/bar')   == relproj(proj('foo/bar'))
    assert Path('/absolute') == relproj(proj('/absolute'))

def test_pretty():
    assert '/ff/bar' == pretty('/ff/bar')
    assert 'foo/bar' == pretty('foo/bar')
    assert 'foo/bar' == pretty(proj('foo/bar'))
    assert 'None'    == pretty(None)
    assert '3'       == pretty(3)

def test_b8home_path_is_absolute():
    p = str(b8home('test'))
    assert abspath(p) == p

@pytest.mark.parametrize('expected, environ', [
    ('/a/bin',              {}),
    ('/a/bin',              { 'PATH': '' }),
    ('/a/bin:/foo:/bar',    { 'PATH': '/foo:/bar' }),
])
def test_addbin(environ, expected):
    addbin('/a', Path('bin'), environ=environ)
    assert expected == environ['PATH']
