;   MC6800 "Hello, world."
;
;   This also tests input, reading and echoing what you type and
;   re-printing the greeting on every CR. ^C will "exit" to an invalid
;   opcode which should abort in a simulator; if it doesn't abort (as it
;   wouldn't on real hardware) the program returns to whatever called it.

hello       jsr prnl
            ldx #message
            bsr prstr
.nextchar   jsr rdchar
            cmp A,#$03              ; Ctrl-C exits
            beq .exit
            cmp A,#$0D              ; CR prints hello again
            beq hello
            jsr prchar              ; echo char
            bra .nextchar

.exit       jsr prnl                ; simulator output starts on new line
            db  $02                 ; invalid opcode causes simulator exit
                                    ;   but is NOP in real hardware
            rts                     ; real 6800s fall through above and return

message     db  "Hello: \0"

;   Print the 0-terminated string pointed to by X.
;   XXX This should be a common routine in src/mc68/pr.a68
prstr       lda A,0,X
            beq .done
            jsr prchar
            inx
            bra prstr
.done       rts
