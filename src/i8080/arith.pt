from    testmc.i8080  import  Machine, Instructions as I
from    testmc  import tmc_tid
import  pytest
param = pytest.mark.parametrize

test_rig = '''
            cpu 8080
            include  src/i8080/std.i80
            include  src/i8080/arith.i80
'''

@param('hl, de, result', [
    (0x0000, 0x0000, 0x0000),
    (0x1234, 0x1233, 0x0001),
    (0x0001, 0x0002, 0xFFFF),       # uses carry
], ids=tmc_tid)
def test_subHLDE(m, S, R, hl, de, result):
    m.call(S.subHLDE, R(hl=hl, de=de))
    Z = (result == 0)
    C = hl >= de            # Would be nice to affect carry, but we don't
                            # need it right now and might increase size.
    assert R(hl=result, de=de, Z=Z) == m.regs

@param('bc, hl, cy', [
    #   BC â‰¥ HL
    (0x0000, 0x0000, False),    (0x0001, 0x0000, False),
    (0x00FF, 0x0000, False),    (0x0100, 0x0000, False),
    (0x8001, 0x7FFF, False),    (0xFFFF, 0x0000, False),
    (0xFFFF, 0xFFFE, False),    (0xFFFF, 0xFFFF, False),
    #   BC < HL
    (0x0000, 0x0001, True),     (0x7FFF, 0x8000, True),
    (0xFFFE, 0xFFFF, True),     (0x0000, 0xFFFF, True),
], ids=tmc_tid)
def test_cpBCHL(m, S, R, bc, hl, cy):
    m.call(S.cpBCHL, R(bc=bc, hl=hl, C=not cy))
    assert R(C=cy) == m.regs

