#!/usr/bin/env bash
set -eu -o pipefail

die() {
    local exitcode="$1"; shift
    [[ -z $1 ]] || echo 1>&2 "$@"
    exit $exitcode
}

#   If $py is unset, set it to a reasonable default. Either way, confirm
#   that it appears to be a Python 3 interpreter.
#
checkpy() {
    : ${py:=python3}
    #   stderr not redirected here so user sees any error from run attempt.
    "$py" --version >/dev/null || die 2 "Bad Python interpreter: $py"
    local v=$("$py" --version 2>&1 | head -1)
    [[ $v = 'Python 3.'* ]] || die 2 "Bad Python version: $v"
}

####################################################################
#   Main

export B8_PROJDIR=$(cd "$(dirname "$0")" && pwd -P)
export BUILDDIR="$B8_PROJDIR/.build"
all_tools="$B8_PROJDIR/.all-tools"

b8tool="$B8_PROJDIR/b8tool/bin/b8tool"
b8_plib="$B8_PROJDIR/b8tool/pylib"      # used locally; not part of b8tool

#   Leading command line args (these must be at the start):
#   • -C: clean rebuild of everything, including toolchains
#   • -c: clean rebuild of only this repo's source (test/toolchain output)
#   • -A: build and use all tools
#   All args after these are passed on to pytest.
while [[ ${#@} -gt 0 ]]; do case "$1" in
    -C)     shift; rm -rf "$BUILDDIR";;
    -c)     shift; rm -rf "$BUILDDIR"/{obj,pytest};;
    -A)     shift; touch "$all_tools";;
    -p)     shift; py="$1"; shift;;
    *)      break;;
esac; done

checkpy; . $B8_PROJDIR/activate -q -p "$py"

[[ -f $all_tools ]] && $b8tool buildtoolset asxxxx
$b8tool buildtoolset asl
$b8tool buildtoolset diskimg
$b8tool buildtoolset dos33fs
$b8tool buildtoolset linapple
[[ $PATH =~ ^$B8_PROJDIR/bin:|:$B8_PROJDIR/bin:|:$B8_PROJDIR/bin$ ]] \
    || export PATH="$B8_PROJDIR/bin:$PATH"

#   In the following builds we have no dependency graph, so everything is
#   rebuilt each time. Fortunately this is quite fast.

####################################################################
#   ASxxxx builds
#   Due to issues with 32-bit binaries, run only when $all_tools set.

[[ -f $all_tools ]] && {
    #   Though we don't need to explicitly specify `simple` as an input
    #   file for the link (aslink would get it from the output file) we
    #   do so anyway to test that b8tool handles it correctly.
    $b8tool asx     src/asxxxx/simple.a65
    $b8tool asxlink src/asxxxx/simple simple
    $b8tool asx     src/asxxxx/reloctest.a65
    $b8tool asxlink src/asxxxx/reloctest -b '_code=0x400'
    $b8tool asx     src/asxxxx/zptest.a65
    $b8tool asxlink src/asxxxx/zptest -b '_code=0x0300'
}

####################################################################
#   AS builds

#   Non-CPU-specific builds/tests (assembler/toolchain tests).
$b8tool asl src/asl/nomacro.a65
$b8tool asl src/asl/sym.a65

#   CPU-specific basic tests that do not rely on the assembly framework.
$b8tool asl src/asl/simple.a65 ' org $240'
$b8tool asl src/mc68/simple.a68

#   Standalone blobs of code.
$b8tool asl src/tmc68/bioscode.a68

#   "Library" routines
$b8tool asltest src/m65/stdtest.a65
$b8tool asltest src/mc68/stdtest.a68
$b8tool asltest src/m65/misc.a65
$b8tool asltest src/mc68/arithtest.a68  '  include "src/tmc68/bios.a68"'
$b8tool asltest src/mc68/pr.a68         '  include "src/tmc68/bios.a68"'
$b8tool asltest src/m65/qhex.a65
$b8tool asltest src/mc68/qhex.a68

$b8tool asltest src/m65/objects.a65
$b8tool asltest src/m65/bigint.a65

$b8tool asltest src/woz/sweet16.a65     '  org $F689 ; Integer BASIC ROM'

#   Portable programs (i.e., not platform-specific)
#   and their platform-specific versions.
$b8tool asltest src/mc68/hello.a68     '  include "src/tmc68/bios.a68"'
$b8tool asl exe/tmc68/hello.a68
$b8tool asl exe/jr200/hello.a68
$b8tool asltest src/mc68/pmon.a68      '  include "src/tmc68/bios.a68"'
$b8tool asl exe/tmc68/pmon.a68
$b8tool asl exe/jr200/pmon.a68

#   Platform-specific code blobs
$b8tool asl src/a1/pia2.a65
$b8tool asl src/a2/misc.a65
$b8tool asl src/a2/mondump.a65
$b8tool asl src/c64.a65
$b8tool asl src/jr200/jr200.a68
$b8tool asl src/fm7.a69

#   Platform-specific programs
$b8tool asl     exe/a1/charset.a65
$b8tool a2dsk   exe/a2/charset.a65

#   Other stuff (probably needs sorting into categories above)
$b8tool asltest  src/mc68/cpxtest.a68
$b8tool asltest  src/mc68/continuation.a68


####################################################################
#   Tests

$b8tool pytest "$@"
