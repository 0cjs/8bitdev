''' Unit tests for utility routines in the opimpl module.

    The opcodes themselves are tested in the `opcodes` module tests
    because they need to cover the opcode/instruction mappings as
    well as the implementations.
'''

import  pytest
from    testmc.mc6800.opimpl  import \
    isnegative, iszero, incword


def test_isnegative():
    assert not isnegative(0)
    assert not isnegative(0x7F)
    assert     isnegative(0x80)
    assert     isnegative(0xFF)

def test_iszero():
    assert     iszero(0)
    assert not iszero(1)
    assert not iszero(0xFF)

@pytest.mark.parametrize(
    'initial, addend, expected', (
    (      0,      0,        0),
    (      0,      1,        1),
    (      0,      2,        2),
    ( 0xFFFE,      1,   0xFFFF),
    ( 0xFFFE,      2,   0x0000),
    ( 0xFFFE,      3,   0x0001),
    (      1,     -1,        0),
    (      1,     -2,   0xFFFF),
    (      1,     -3,   0xFFFE),
    ( 0x8000, 0xFFFF,   0x7FFF),
    ( 0x8000,-0xFFFF,   0x8001),
))
def test_incword(initial, addend, expected):
    assert expected == incword(initial, addend)
