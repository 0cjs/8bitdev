from    testmc  import *
from    testmc.mc6800  import *
import  pytest

R = Machine.Registers

test_rig = '''
                cpu 6800
                org $800

nkbin_len       equ 4
nkbin_actv      ds  nkbin_len

                org $1000

               ;include src/mc68/std.a68
               ;include src/tmc68/bios.a68
                include src/mb6885/nkbin.a68
'''

@pytest.mark.parametrize('actv, kbinputs, newactv', [
    #   No active keys; reads/changes nothing
    (b'\x00\x00\x00\x00',   b'',                b'\x00\x00\x00\x00'),
    #   None of the active keys are pressed; clears all.
    #   XXX should fail on 3rd read until we add that byte
    (b'\x00\x01\x02\x04', b'\x00\x00',          b'\x00\x00\x00\x00'),
])
def test_clear_released(m, S, actv, kbinputs, newactv):
    m.deposit(S.nkbin_actv, actv)
    m.call(S['nkbin.clear_released'])
    assert newactv == m.bytes(S.nkbin_actv, 4)
