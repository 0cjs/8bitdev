from    cmtconv.logging  import (
    ZERO_VERBOSITY_LOG_LEVEL,
    parent_pkgname, caller_pkgname, get_cmtconv_logger,
    HANDLER, logging_init,
    )
import  pytest

zlvl = ZERO_VERBOSITY_LOG_LEVEL

def test_parent_pkgname():
    p = parent_pkgname
    assert  ('cmtconv', 'foo.bar',         'foo',
       ) == (p(),        p('foo.bar.baz'), p('foo'), )

def test_caller_pkgname():
    assert 'cmtconv.logging' == caller_pkgname(0)
    assert          __name__ == caller_pkgname(1)
    assert          'pytest' in caller_pkgname(2)

def test_logging_init():
    l = get_cmtconv_logger()
    #   XXX This should test by removing the handler we set up
    #   and installing our own test handler that we can query for
    #   the output. Too much work to do right now....

@pytest.mark.xfail(strict=True, reason='Used for debugging. Delete?')
def test_printstuff():
    l = get_cmtconv_logger()
    l.log(zlvl, 'TLI 1 %s', 2)
    print(l)
    print('name:', l.name)
    print('disabled:', l.disabled)
    print('propagate:', l.propagate)
    print('level:', l.level)
    print('getEffectiveLevel():', l.getEffectiveLevel())
    print('handlers:', l.handlers)
    print('parent:', l.parent.name, l.parent)
    assert 0
