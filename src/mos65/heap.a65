;   A simple cons cell heap

;   This grows down from the top of the heap area beacause a) the 6502
;   stack doesn't share memory with this and b) we anticipate a separate
;   heap for variable size objects growing upward under this.

;   Currently this is allocate-only. There's no way of marking a cell as
;   used or free, so free space starts at the free space pointer.

; ----------------------------------------------------------------------
;   Client-supplied constants and variables.
;
;   • hc_top        first address above the heap, for hc_init and GC
;   • hc_bottom     word storing lowest allocated cons cell

; ----------------------------------------------------------------------

;   ♣A♡XY  Initialize heap
;
;   Currently hardcoded to start it at $7FFF and work down until it
;   destroys the system badly enough that nothing will run any more.
;
hcinit
            lda #LB(hc_top)
            sta hc_bottom
            lda #MB(hc_top)
            sta hc_bottom+1
            rts

;   ♠X ♣AY  Allocate a 2-word heap cell, storing the pointer to it in 0,X
;
hcalloc     lda hc_bottom       ; decrement LSB by 4
            sec
            sbc #4
            sta hc_bottom       ; move heap bottom down
            sta 0,X             ; also copy to output
            ldy hc_bottom+1     ; MSB for copy, possibly decremented first
            bcs .msb_ok         ; if no need to decrement MSB
            dey
            sty hc_bottom+1
.msb_ok     sty 1,X
            rts
